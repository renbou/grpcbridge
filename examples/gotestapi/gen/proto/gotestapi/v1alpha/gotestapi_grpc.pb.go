// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: gotestapi/v1alpha/gotestapi.proto

package gotestapiv1alpha

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	VeggieShop_CreatePurchase_FullMethodName = "/gotestapi.v1alpha.VeggieShop/CreatePurchase"
)

// VeggieShopClient is the client API for VeggieShop service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type VeggieShopClient interface {
	CreatePurchase(ctx context.Context, in *CreatePurchaseRequest, opts ...grpc.CallOption) (*CreatePurchaseResponse, error)
}

type veggieShopClient struct {
	cc grpc.ClientConnInterface
}

func NewVeggieShopClient(cc grpc.ClientConnInterface) VeggieShopClient {
	return &veggieShopClient{cc}
}

func (c *veggieShopClient) CreatePurchase(ctx context.Context, in *CreatePurchaseRequest, opts ...grpc.CallOption) (*CreatePurchaseResponse, error) {
	out := new(CreatePurchaseResponse)
	err := c.cc.Invoke(ctx, VeggieShop_CreatePurchase_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VeggieShopServer is the server API for VeggieShop service.
// All implementations must embed UnimplementedVeggieShopServer
// for forward compatibility
type VeggieShopServer interface {
	CreatePurchase(context.Context, *CreatePurchaseRequest) (*CreatePurchaseResponse, error)
	mustEmbedUnimplementedVeggieShopServer()
}

// UnimplementedVeggieShopServer must be embedded to have forward compatible implementations.
type UnimplementedVeggieShopServer struct {
}

func (UnimplementedVeggieShopServer) CreatePurchase(context.Context, *CreatePurchaseRequest) (*CreatePurchaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePurchase not implemented")
}
func (UnimplementedVeggieShopServer) mustEmbedUnimplementedVeggieShopServer() {}

// UnsafeVeggieShopServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to VeggieShopServer will
// result in compilation errors.
type UnsafeVeggieShopServer interface {
	mustEmbedUnimplementedVeggieShopServer()
}

func RegisterVeggieShopServer(s grpc.ServiceRegistrar, srv VeggieShopServer) {
	s.RegisterService(&VeggieShop_ServiceDesc, srv)
}

func _VeggieShop_CreatePurchase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePurchaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VeggieShopServer).CreatePurchase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: VeggieShop_CreatePurchase_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VeggieShopServer).CreatePurchase(ctx, req.(*CreatePurchaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// VeggieShop_ServiceDesc is the grpc.ServiceDesc for VeggieShop service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var VeggieShop_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "gotestapi.v1alpha.VeggieShop",
	HandlerType: (*VeggieShopServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePurchase",
			Handler:    _VeggieShop_CreatePurchase_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gotestapi/v1alpha/gotestapi.proto",
}
