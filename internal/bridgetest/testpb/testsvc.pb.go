// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: testsvc.proto

package testpb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Combined struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scalars    *Scalars    `protobuf:"bytes,1,opt,name=scalars,proto3" json:"scalars,omitempty"`
	NonScalars *NonScalars `protobuf:"bytes,2,opt,name=non_scalars,json=nonScalars,proto3" json:"non_scalars,omitempty"`
}

func (x *Combined) Reset() {
	*x = Combined{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testsvc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Combined) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Combined) ProtoMessage() {}

func (x *Combined) ProtoReflect() protoreflect.Message {
	mi := &file_testsvc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Combined.ProtoReflect.Descriptor instead.
func (*Combined) Descriptor() ([]byte, []int) {
	return file_testsvc_proto_rawDescGZIP(), []int{0}
}

func (x *Combined) GetScalars() *Scalars {
	if x != nil {
		return x.Scalars
	}
	return nil
}

func (x *Combined) GetNonScalars() *NonScalars {
	if x != nil {
		return x.NonScalars
	}
	return nil
}

var File_testsvc_proto protoreflect.FileDescriptor

var file_testsvc_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x74, 0x65, 0x73, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x25, 0x67, 0x72, 0x70, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x74, 0x65, 0x73, 0x74, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa8, 0x01, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x48, 0x0a, 0x07, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x65, 0x73, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61,
	0x72, 0x73, 0x52, 0x07, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x12, 0x52, 0x0a, 0x0b, 0x6e,
	0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x74, 0x65, 0x73,
	0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c,
	0x61, 0x72, 0x73, 0x52, 0x0a, 0x6e, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x32,
	0xb1, 0x06, 0x0a, 0x0b, 0x54, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x6e, 0x0a, 0x0c, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x55, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12,
	0x2e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x74, 0x65, 0x73, 0x74,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x1a,
	0x2e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x74, 0x65, 0x73, 0x74,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x12,
	0xb1, 0x01, 0x0a, 0x0a, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x2e,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x74, 0x65, 0x73, 0x74, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x1a, 0x2f,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x74, 0x65, 0x73, 0x74, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x22,
	0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x3a, 0x0b, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x75,
	0x6e, 0x61, 0x72, 0x79, 0x2f, 0x7b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x7d, 0x2f, 0x7b, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x7d, 0x12, 0xd2, 0x01, 0x0a, 0x0d, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x2f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x1a, 0x2f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x22, 0x5f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x59, 0x3a,
	0x0b, 0x6e, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x62, 0x0b, 0x6e, 0x6f,
	0x6e, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x22, 0x3d, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x2f, 0x7b, 0x73, 0x63,
	0x61, 0x6c, 0x61, 0x72, 0x73, 0x2e, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x7d, 0x2f, 0x7b, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x7d, 0x12, 0xa3, 0x01, 0x0a, 0x0f, 0x42, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x1a, 0x2f, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x22, 0x2f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x29, 0x62, 0x0b, 0x6e, 0x6f, 0x74, 0x5f, 0x61, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x22, 0x1a, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x62, 0x61, 0x64,
	0x2d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2d, 0x70, 0x61, 0x74, 0x68, 0x12, 0x82,
	0x01, 0x0a, 0x04, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x2f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x62, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x62, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x1a, 0x2f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x62,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x62,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x65,
	0x63, 0x68, 0x6f, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x72, 0x65, 0x6e, 0x62, 0x6f, 0x75, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_testsvc_proto_rawDescOnce sync.Once
	file_testsvc_proto_rawDescData = file_testsvc_proto_rawDesc
)

func file_testsvc_proto_rawDescGZIP() []byte {
	file_testsvc_proto_rawDescOnce.Do(func() {
		file_testsvc_proto_rawDescData = protoimpl.X.CompressGZIP(file_testsvc_proto_rawDescData)
	})
	return file_testsvc_proto_rawDescData
}

var file_testsvc_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_testsvc_proto_goTypes = []interface{}{
	(*Combined)(nil),   // 0: grpcbridge.internal.bridgetest.testpb.Combined
	(*Scalars)(nil),    // 1: grpcbridge.internal.bridgetest.testpb.Scalars
	(*NonScalars)(nil), // 2: grpcbridge.internal.bridgetest.testpb.NonScalars
}
var file_testsvc_proto_depIdxs = []int32{
	1, // 0: grpcbridge.internal.bridgetest.testpb.Combined.scalars:type_name -> grpcbridge.internal.bridgetest.testpb.Scalars
	2, // 1: grpcbridge.internal.bridgetest.testpb.Combined.non_scalars:type_name -> grpcbridge.internal.bridgetest.testpb.NonScalars
	1, // 2: grpcbridge.internal.bridgetest.testpb.TestService.UnaryUnbound:input_type -> grpcbridge.internal.bridgetest.testpb.Scalars
	1, // 3: grpcbridge.internal.bridgetest.testpb.TestService.UnaryBound:input_type -> grpcbridge.internal.bridgetest.testpb.Scalars
	0, // 4: grpcbridge.internal.bridgetest.testpb.TestService.UnaryCombined:input_type -> grpcbridge.internal.bridgetest.testpb.Combined
	1, // 5: grpcbridge.internal.bridgetest.testpb.TestService.BadResponsePath:input_type -> grpcbridge.internal.bridgetest.testpb.Scalars
	0, // 6: grpcbridge.internal.bridgetest.testpb.TestService.Echo:input_type -> grpcbridge.internal.bridgetest.testpb.Combined
	1, // 7: grpcbridge.internal.bridgetest.testpb.TestService.UnaryUnbound:output_type -> grpcbridge.internal.bridgetest.testpb.Scalars
	0, // 8: grpcbridge.internal.bridgetest.testpb.TestService.UnaryBound:output_type -> grpcbridge.internal.bridgetest.testpb.Combined
	0, // 9: grpcbridge.internal.bridgetest.testpb.TestService.UnaryCombined:output_type -> grpcbridge.internal.bridgetest.testpb.Combined
	0, // 10: grpcbridge.internal.bridgetest.testpb.TestService.BadResponsePath:output_type -> grpcbridge.internal.bridgetest.testpb.Combined
	0, // 11: grpcbridge.internal.bridgetest.testpb.TestService.Echo:output_type -> grpcbridge.internal.bridgetest.testpb.Combined
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_testsvc_proto_init() }
func file_testsvc_proto_init() {
	if File_testsvc_proto != nil {
		return
	}
	file_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_testsvc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Combined); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_testsvc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_testsvc_proto_goTypes,
		DependencyIndexes: file_testsvc_proto_depIdxs,
		MessageInfos:      file_testsvc_proto_msgTypes,
	}.Build()
	File_testsvc_proto = out.File
	file_testsvc_proto_rawDesc = nil
	file_testsvc_proto_goTypes = nil
	file_testsvc_proto_depIdxs = nil
}
