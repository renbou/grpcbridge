// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: proto/testapi/v1/testapi.proto

package testapiv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UnaryEchoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UnaryEchoRequest) Reset() {
	*x = UnaryEchoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_testapi_v1_testapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnaryEchoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnaryEchoRequest) ProtoMessage() {}

func (x *UnaryEchoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_testapi_v1_testapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnaryEchoRequest.ProtoReflect.Descriptor instead.
func (*UnaryEchoRequest) Descriptor() ([]byte, []int) {
	return file_proto_testapi_v1_testapi_proto_rawDescGZIP(), []int{0}
}

func (x *UnaryEchoRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UnaryEchoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UnaryEchoResponse) Reset() {
	*x = UnaryEchoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_testapi_v1_testapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnaryEchoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnaryEchoResponse) ProtoMessage() {}

func (x *UnaryEchoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_testapi_v1_testapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnaryEchoResponse.ProtoReflect.Descriptor instead.
func (*UnaryEchoResponse) Descriptor() ([]byte, []int) {
	return file_proto_testapi_v1_testapi_proto_rawDescGZIP(), []int{1}
}

func (x *UnaryEchoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ClientStreamEchoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []string `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *ClientStreamEchoRequest) Reset() {
	*x = ClientStreamEchoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_testapi_v1_testapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStreamEchoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStreamEchoRequest) ProtoMessage() {}

func (x *ClientStreamEchoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_testapi_v1_testapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStreamEchoRequest.ProtoReflect.Descriptor instead.
func (*ClientStreamEchoRequest) Descriptor() ([]byte, []int) {
	return file_proto_testapi_v1_testapi_proto_rawDescGZIP(), []int{2}
}

func (x *ClientStreamEchoRequest) GetMessages() []string {
	if x != nil {
		return x.Messages
	}
	return nil
}

type ClientStreamEchoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accumulated []string `protobuf:"bytes,1,rep,name=accumulated,proto3" json:"accumulated,omitempty"`
}

func (x *ClientStreamEchoResponse) Reset() {
	*x = ClientStreamEchoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_testapi_v1_testapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStreamEchoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStreamEchoResponse) ProtoMessage() {}

func (x *ClientStreamEchoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_testapi_v1_testapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStreamEchoResponse.ProtoReflect.Descriptor instead.
func (*ClientStreamEchoResponse) Descriptor() ([]byte, []int) {
	return file_proto_testapi_v1_testapi_proto_rawDescGZIP(), []int{3}
}

func (x *ClientStreamEchoResponse) GetAccumulated() []string {
	if x != nil {
		return x.Accumulated
	}
	return nil
}

type ServerStreamEchoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Repeat  int32  `protobuf:"varint,2,opt,name=repeat,proto3" json:"repeat,omitempty"`
}

func (x *ServerStreamEchoRequest) Reset() {
	*x = ServerStreamEchoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_testapi_v1_testapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerStreamEchoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerStreamEchoRequest) ProtoMessage() {}

func (x *ServerStreamEchoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_testapi_v1_testapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerStreamEchoRequest.ProtoReflect.Descriptor instead.
func (*ServerStreamEchoRequest) Descriptor() ([]byte, []int) {
	return file_proto_testapi_v1_testapi_proto_rawDescGZIP(), []int{4}
}

func (x *ServerStreamEchoRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServerStreamEchoRequest) GetRepeat() int32 {
	if x != nil {
		return x.Repeat
	}
	return 0
}

type ServerStreamEchoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Index   int32  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *ServerStreamEchoResponse) Reset() {
	*x = ServerStreamEchoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_testapi_v1_testapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerStreamEchoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerStreamEchoResponse) ProtoMessage() {}

func (x *ServerStreamEchoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_testapi_v1_testapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerStreamEchoResponse.ProtoReflect.Descriptor instead.
func (*ServerStreamEchoResponse) Descriptor() ([]byte, []int) {
	return file_proto_testapi_v1_testapi_proto_rawDescGZIP(), []int{5}
}

func (x *ServerStreamEchoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServerStreamEchoResponse) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type BiDiStreamEchoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*BiDiStreamEchoRequest_Text
	//	*BiDiStreamEchoRequest_Data
	Message isBiDiStreamEchoRequest_Message `protobuf_oneof:"message"`
}

func (x *BiDiStreamEchoRequest) Reset() {
	*x = BiDiStreamEchoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_testapi_v1_testapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiDiStreamEchoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiDiStreamEchoRequest) ProtoMessage() {}

func (x *BiDiStreamEchoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_testapi_v1_testapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiDiStreamEchoRequest.ProtoReflect.Descriptor instead.
func (*BiDiStreamEchoRequest) Descriptor() ([]byte, []int) {
	return file_proto_testapi_v1_testapi_proto_rawDescGZIP(), []int{6}
}

func (m *BiDiStreamEchoRequest) GetMessage() isBiDiStreamEchoRequest_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *BiDiStreamEchoRequest) GetText() string {
	if x, ok := x.GetMessage().(*BiDiStreamEchoRequest_Text); ok {
		return x.Text
	}
	return ""
}

func (x *BiDiStreamEchoRequest) GetData() []byte {
	if x, ok := x.GetMessage().(*BiDiStreamEchoRequest_Data); ok {
		return x.Data
	}
	return nil
}

type isBiDiStreamEchoRequest_Message interface {
	isBiDiStreamEchoRequest_Message()
}

type BiDiStreamEchoRequest_Text struct {
	Text string `protobuf:"bytes,1,opt,name=text,proto3,oneof"`
}

type BiDiStreamEchoRequest_Data struct {
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*BiDiStreamEchoRequest_Text) isBiDiStreamEchoRequest_Message() {}

func (*BiDiStreamEchoRequest_Data) isBiDiStreamEchoRequest_Message() {}

type BiDiStreamEchoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*BiDiStreamEchoResponse_Text
	//	*BiDiStreamEchoResponse_Data
	Message isBiDiStreamEchoResponse_Message `protobuf_oneof:"message"`
}

func (x *BiDiStreamEchoResponse) Reset() {
	*x = BiDiStreamEchoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_testapi_v1_testapi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiDiStreamEchoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiDiStreamEchoResponse) ProtoMessage() {}

func (x *BiDiStreamEchoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_testapi_v1_testapi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiDiStreamEchoResponse.ProtoReflect.Descriptor instead.
func (*BiDiStreamEchoResponse) Descriptor() ([]byte, []int) {
	return file_proto_testapi_v1_testapi_proto_rawDescGZIP(), []int{7}
}

func (m *BiDiStreamEchoResponse) GetMessage() isBiDiStreamEchoResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *BiDiStreamEchoResponse) GetText() string {
	if x, ok := x.GetMessage().(*BiDiStreamEchoResponse_Text); ok {
		return x.Text
	}
	return ""
}

func (x *BiDiStreamEchoResponse) GetData() []byte {
	if x, ok := x.GetMessage().(*BiDiStreamEchoResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isBiDiStreamEchoResponse_Message interface {
	isBiDiStreamEchoResponse_Message()
}

type BiDiStreamEchoResponse_Text struct {
	Text string `protobuf:"bytes,1,opt,name=text,proto3,oneof"`
}

type BiDiStreamEchoResponse_Data struct {
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*BiDiStreamEchoResponse_Text) isBiDiStreamEchoResponse_Message() {}

func (*BiDiStreamEchoResponse_Data) isBiDiStreamEchoResponse_Message() {}

var File_proto_testapi_v1_testapi_proto protoreflect.FileDescriptor

var file_proto_testapi_v1_testapi_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x22, 0x2c, 0x0a, 0x10,
	0x55, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2d, 0x0a, 0x11, 0x55, 0x6e,
	0x61, 0x72, 0x79, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x35, 0x0a, 0x17, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x22, 0x3c, 0x0a, 0x18, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x22, 0x4b,
	0x0a, 0x17, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x63,
	0x68, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x22, 0x4a, 0x0a, 0x18, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x63, 0x68, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x4e, 0x0a, 0x15, 0x42, 0x69, 0x44, 0x69, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x09, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4f, 0x0a, 0x16, 0x42, 0x69, 0x44, 0x69, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x09, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xf6, 0x02, 0x0a, 0x0b, 0x54, 0x65, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x09, 0x55, 0x6e, 0x61, 0x72,
	0x79, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x1c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5f, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x23, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x28, 0x01, 0x12, 0x5f, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x23, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x30, 0x01, 0x12, 0x5b, 0x0a, 0x0e, 0x42, 0x69, 0x44, 0x69, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x21, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x44, 0x69, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x63,
	0x68, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x44, 0x69, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30,
	0x01, 0x42, 0x8b, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x54, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x22, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54, 0x58, 0x58, 0xaa, 0x02,
	0x0a, 0x54, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0a, 0x54, 0x65,
	0x73, 0x74, 0x61, 0x70, 0x69, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x16, 0x54, 0x65, 0x73, 0x74, 0x61,
	0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x0b, 0x54, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_testapi_v1_testapi_proto_rawDescOnce sync.Once
	file_proto_testapi_v1_testapi_proto_rawDescData = file_proto_testapi_v1_testapi_proto_rawDesc
)

func file_proto_testapi_v1_testapi_proto_rawDescGZIP() []byte {
	file_proto_testapi_v1_testapi_proto_rawDescOnce.Do(func() {
		file_proto_testapi_v1_testapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_testapi_v1_testapi_proto_rawDescData)
	})
	return file_proto_testapi_v1_testapi_proto_rawDescData
}

var file_proto_testapi_v1_testapi_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_testapi_v1_testapi_proto_goTypes = []interface{}{
	(*UnaryEchoRequest)(nil),         // 0: testapi.v1.UnaryEchoRequest
	(*UnaryEchoResponse)(nil),        // 1: testapi.v1.UnaryEchoResponse
	(*ClientStreamEchoRequest)(nil),  // 2: testapi.v1.ClientStreamEchoRequest
	(*ClientStreamEchoResponse)(nil), // 3: testapi.v1.ClientStreamEchoResponse
	(*ServerStreamEchoRequest)(nil),  // 4: testapi.v1.ServerStreamEchoRequest
	(*ServerStreamEchoResponse)(nil), // 5: testapi.v1.ServerStreamEchoResponse
	(*BiDiStreamEchoRequest)(nil),    // 6: testapi.v1.BiDiStreamEchoRequest
	(*BiDiStreamEchoResponse)(nil),   // 7: testapi.v1.BiDiStreamEchoResponse
}
var file_proto_testapi_v1_testapi_proto_depIdxs = []int32{
	0, // 0: testapi.v1.TestService.UnaryEcho:input_type -> testapi.v1.UnaryEchoRequest
	2, // 1: testapi.v1.TestService.ClientStreamEcho:input_type -> testapi.v1.ClientStreamEchoRequest
	4, // 2: testapi.v1.TestService.ServerStreamEcho:input_type -> testapi.v1.ServerStreamEchoRequest
	6, // 3: testapi.v1.TestService.BiDiStreamEcho:input_type -> testapi.v1.BiDiStreamEchoRequest
	1, // 4: testapi.v1.TestService.UnaryEcho:output_type -> testapi.v1.UnaryEchoResponse
	3, // 5: testapi.v1.TestService.ClientStreamEcho:output_type -> testapi.v1.ClientStreamEchoResponse
	5, // 6: testapi.v1.TestService.ServerStreamEcho:output_type -> testapi.v1.ServerStreamEchoResponse
	7, // 7: testapi.v1.TestService.BiDiStreamEcho:output_type -> testapi.v1.BiDiStreamEchoResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_testapi_v1_testapi_proto_init() }
func file_proto_testapi_v1_testapi_proto_init() {
	if File_proto_testapi_v1_testapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_testapi_v1_testapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnaryEchoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_testapi_v1_testapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnaryEchoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_testapi_v1_testapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientStreamEchoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_testapi_v1_testapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientStreamEchoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_testapi_v1_testapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerStreamEchoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_testapi_v1_testapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerStreamEchoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_testapi_v1_testapi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiDiStreamEchoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_testapi_v1_testapi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiDiStreamEchoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_testapi_v1_testapi_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*BiDiStreamEchoRequest_Text)(nil),
		(*BiDiStreamEchoRequest_Data)(nil),
	}
	file_proto_testapi_v1_testapi_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*BiDiStreamEchoResponse_Text)(nil),
		(*BiDiStreamEchoResponse_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_testapi_v1_testapi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_testapi_v1_testapi_proto_goTypes,
		DependencyIndexes: file_proto_testapi_v1_testapi_proto_depIdxs,
		MessageInfos:      file_proto_testapi_v1_testapi_proto_msgTypes,
	}.Build()
	File_proto_testapi_v1_testapi_proto = out.File
	file_proto_testapi_v1_testapi_proto_rawDesc = nil
	file_proto_testapi_v1_testapi_proto_goTypes = nil
	file_proto_testapi_v1_testapi_proto_depIdxs = nil
}
