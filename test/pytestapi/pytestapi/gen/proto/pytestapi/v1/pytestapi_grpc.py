# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: proto/pytestapi/v1/pytestapi.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.protobuf.wrappers_pb2
import proto.pytestapi.v1.pytestapi_pb2


class WrapperServiceBase(abc.ABC):

    @abc.abstractmethod
    async def UnaryWrap(self, stream: 'grpclib.server.Stream[proto.pytestapi.v1.pytestapi_pb2.UnaryWrapRequest, proto.pytestapi.v1.pytestapi_pb2.UnaryWrapResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/pytestapi.v1.WrapperService/UnaryWrap': grpclib.const.Handler(
                self.UnaryWrap,
                grpclib.const.Cardinality.UNARY_UNARY,
                proto.pytestapi.v1.pytestapi_pb2.UnaryWrapRequest,
                proto.pytestapi.v1.pytestapi_pb2.UnaryWrapResponse,
            ),
        }


class WrapperServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.UnaryWrap = grpclib.client.UnaryUnaryMethod(
            channel,
            '/pytestapi.v1.WrapperService/UnaryWrap',
            proto.pytestapi.v1.pytestapi_pb2.UnaryWrapRequest,
            proto.pytestapi.v1.pytestapi_pb2.UnaryWrapResponse,
        )
